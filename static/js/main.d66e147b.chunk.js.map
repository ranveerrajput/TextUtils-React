{"version":3,"sources":["components/Navbar.js","components/TextForm.js","components/Alert.js","App.js","reportWebVitals.js","index.js"],"names":["Navbar","props","className","mode","href","title","type","id","onClick","toggleMode","htmlFor","TextForm","useState","Text","setText","style","color","heading","onChange","event","target","value","rows","backgroundColor","disabled","length","newText","toUpperCase","toLowerCase","split","filter","element","defaultProps","Alert","height","alert","role","word","lower","charAt","slice","capitalize","msg","App","setmode","setAlert","showAlert","message","setTimeout","document","body","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","getElementById"],"mappings":"oMAKe,SAASA,EAAOC,GAC3B,OACI,qBAAKC,UAAS,yCAAoCD,EAAME,KAA1C,eAAqDF,EAAME,MAAzE,SACA,sBAAKD,UAAU,kBAAf,UACE,mBAAGA,UAAU,eAAeE,KAAK,IAAjC,SACGH,EAAMI,QAET,wBACEH,UAAU,iBACVI,KAAK,SACL,iBAAe,WACf,iBAAe,0BACf,gBAAc,yBACd,gBAAc,QACd,aAAW,oBAPb,SASE,sBAAMJ,UAAU,0BAElB,sBAAKA,UAAU,2BAA2BK,GAAG,yBAA7C,UACE,oBAAIL,UAAU,kCAAd,SACE,oBAAIA,UAAU,WAAd,SACE,mBAAGA,UAAU,kBAAkB,eAAa,OAAOE,KAAK,IAAxD,sBAqBJ,sBAAKF,UAAS,sCAA8C,SAAbD,EAAME,KAAc,QAAQ,QAA3E,UACE,uBAAOD,UAAU,mBAAmBM,QAASP,EAAMQ,WAAYH,KAAK,WAAWC,GAAG,2BAClF,wBAAOL,UAAU,mBAAmBQ,QAAQ,yBAA5C,oBAA0F,UAAbT,EAAME,KAAe,OAAO,QAAzG,sBC9CC,SAASQ,EAASV,GAC7B,MAAwBW,mBAAS,mBAAjC,mBAAOC,EAAP,KAAaC,EAAb,KAqBA,OACI,qCACA,sBAAKZ,UAAU,YAAYa,MAAO,CAACC,MAAoB,UAAbf,EAAME,KAAe,QAAQ,SAAvE,UACI,sBAAKD,UAAU,OAAOa,MAAO,CAACC,MAAoB,UAAbf,EAAME,KAAe,QAAQ,SAAlE,UACI,6BAAKF,EAAMgB,UACX,0BAAUf,UAAU,eAAgBgB,SAVzB,SAACC,GAEpBL,EAAQK,EAAMC,OAAOC,QAQmDA,MAAOR,EAAMN,GAAG,QAAQe,KAAK,IAAIP,MAAO,CAACQ,gBAA8B,SAAbtB,EAAME,KAAc,UAAU,QAASa,MAAqB,UAAbf,EAAME,KAAe,QAAQ,SAAtM,kBAEJ,wBAAQqB,SAAwB,IAAdX,EAAKY,OAAYvB,UAAU,4BAA4BM,QA1B3D,WAEnB,IAAIkB,EAAUb,EAAKc,cAClBb,EAAQY,IAuBJ,kCACA,wBAAQF,SAAwB,IAAdX,EAAKY,OAAYvB,UAAU,4BAA4BM,QApB3D,WAElB,IAAIkB,EAAUb,EAAKe,cAClBd,EAAQY,IAiBL,qCAGJ,sBAAKxB,UAAU,iBAAiBa,MAAO,CAACC,MAAoB,UAAbf,EAAME,KAAe,QAAQ,SAA5E,UACA,mDACA,8BAAIU,EAAKgB,MAAM,OAAOC,QAAO,SAACC,GAAW,OAAwB,IAAjBA,EAAQN,UAAcA,OAAtE,cAAyFZ,EAAKY,OAA9F,cACA,8BAAI,KAAQZ,EAAKgB,MAAM,KAAKC,QAAO,SAACC,GAAW,OAAwB,IAAjBA,EAAQN,UAAcA,OAA5E,mBACA,yCACA,4BAAIZ,EAAKY,OAAO,EAAEZ,EAAK,6BDoB/Bb,EAAOgC,aAAe,CAClB3B,MAAQ,kBE9CG4B,MAdf,SAAehC,GAKX,OACI,qBAAKc,MAAO,CAACmB,OAAS,QAAtB,SACKjC,EAAMkC,OAAS,sBAAKjC,UAAS,sBAAiBD,EAAMkC,MAAM7B,KAA7B,gCAAiE8B,KAAK,QAApF,UACZ,iCAPO,SAACC,GAChB,IAAMC,EAASD,EAAKT,cACpB,OAAOU,EAAMC,OAAO,GAAGZ,cAAgBW,EAAME,MAAM,GAKlCC,CAAWxC,EAAMkC,MAAM7B,QADpB,KACsCL,EAAMkC,MAAMO,UCuD/DC,MAhDf,WACE,MAAwB/B,mBAAS,SAAjC,mBAAOT,EAAP,KAAayC,EAAb,KACA,EAA0BhC,mBAAS,MAAnC,mBAAOuB,EAAP,KAAcU,EAAd,KAEMC,EAAY,SAACC,EAASzC,GAC1BuC,EAAS,CACTH,IAAKK,EACLzC,KAAMA,IAGN0C,YAAW,WACTH,EAAS,QAER,MAeL,OACE,qCAEE,cAAC7C,EAAD,CAAQK,MAAM,aAAaF,KAAMA,EAAMM,WAfxB,WACJ,UAATN,GACFyC,EAAQ,QACRK,SAASC,KAAKnC,MAAMQ,gBAAgB,UACpCuB,EAAU,6BAA6B,aAEvCF,EAAQ,SACRK,SAASC,KAAKnC,MAAMQ,gBAAgB,QACpCuB,EAAU,8BAA8B,eAQxC,cAAC,EAAD,CAAOX,MAAOA,IACd,qBAAKjC,UAAU,iBAAf,SAMI,cAACS,EAAD,CAAUM,QAAQ,kCAAoCd,KAAMA,UC5CvDgD,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,OCDdQ,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFb,SAASc,eAAe,SAM1BZ,K","file":"static/js/main.d66e147b.chunk.js","sourcesContent":["import React from 'react'\r\nimport PropTypes from 'prop-types'\r\n// import { Link } from 'react-router-dom'\r\n\r\n\r\nexport default function Navbar(props) {\r\n    return (\r\n        <nav className={`navbar navbar-expand-lg navbar-${props.mode} bg-${props.mode}`}>\r\n        <div className=\"container-fluid\">\r\n          <a className=\"navbar-brand\" href=\"#\">\r\n            {props.title}\r\n          </a>\r\n          <button\r\n            className=\"navbar-toggler\"\r\n            type=\"button\"\r\n            data-bs-toggle=\"collapse\"\r\n            data-bs-target=\"#navbarSupportedContent\"\r\n            aria-controls=\"navbarSupportedContent\"\r\n            aria-expanded=\"false\"\r\n            aria-label=\"Toggle navigation\"\r\n          >\r\n            <span className=\"navbar-toggler-icon\"></span>\r\n          </button>\r\n          <div className=\"collapse navbar-collapse\" id=\"navbarSupportedContent\">\r\n            <ul className=\"navbar-nav me-auto mb-2 mb-lg-0\">\r\n              <li className=\"nav-item\">\r\n                <a className=\"nav-link active\" aria-current=\"page\" href=\"#\">\r\n                  Home\r\n                </a>\r\n              </li>\r\n              {/* <li className=\"nav-item\">\r\n                <a className=\"nav-link\" href=\"/about\">\r\n                  About\r\n                </a>\r\n              </li> */}\r\n            </ul>\r\n            {/*<form className=\"d-flex\">\r\n              <input\r\n                className=\"form-control me-2\"\r\n                type=\"search\"\r\n                placeholder=\"Search\"\r\n                aria-label=\"Search\"\r\n              />\r\n              <button className=\"btn btn-outline-success\" type=\"submit\">\r\n                Search\r\n              </button>\r\n            </form>8*/}\r\n            <div className={`form-check form-switch text-${props.mode==='dark'?'light':'dark'}`}>\r\n              <input className=\"form-check-input\" onClick={props.toggleMode} type=\"checkbox\" id=\"flexSwitchCheckDefault\"/>\r\n              <label className=\"form-check-label\" htmlFor=\"flexSwitchCheckDefault\">Enable {props.mode==='light'?'dark':'light'} Mode</label>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </nav>\r\n    )\r\n}\r\n\r\nNavbar.propTypes = {\r\n    title: PropTypes.string\r\n}\r\n\r\nNavbar.defaultProps = {\r\n    title : 'Set title here'\r\n};","import React, {useState} from 'react'\r\n\r\n\r\nexport default function TextForm(props) {\r\n    const [Text, setText] = useState(\"Enter text here\");\r\n\r\n    const handleUpClick = ()=> {\r\n       // console.log(\"Uppercase was clicked\");\r\n       let newText = Text.toUpperCase()\r\n        setText(newText);\r\n\r\n    }\r\n\r\n    const handleLoClick = ()=> {\r\n        // console.log(\"Uppercase was clicked\");\r\n        let newText = Text.toLowerCase()\r\n         setText(newText);\r\n \r\n     }\r\n\r\n    const handleOnChange = (event)=> {\r\n       // console.log(\"On change\");\r\n        setText(event.target.value);\r\n    }\r\n\r\n    return (\r\n        <>\r\n        <div className=\"container\" style={{color :props.mode==='light'?'black':'white'}}>\r\n            <div className=\"mb-3\" style={{color :props.mode==='light'?'black':'white'}}>\r\n                <h1>{props.heading}</h1>\r\n                <textarea className=\"form-control\"  onChange={handleOnChange}   value={Text} id=\"myBox\" rows=\"8\" style={{backgroundColor :props.mode==='dark'?'#13466e':'white', color : props.mode==='light'?'black':'white'}}> </textarea>       \r\n            </div>\r\n            <button disabled={Text.length===0} className=\"btn btn-primary mx-2 my-1\" onClick={handleUpClick}>Convert to Uppercase</button>\r\n            <button disabled={Text.length===0} className=\"btn btn-primary mx-2 my-1\" onClick={handleLoClick}>Convert to Lowercase</button>\r\n        </div>\r\n        \r\n        <div className=\"container my-3\" style={{color :props.mode==='light'?'black':'white'}}>\r\n        <h1>Your Text Summary</h1>\r\n        <p>{Text.split(/\\s+/).filter((element)=>{return element.length!==0 }).length} words and {Text.length} letters</p>\r\n        <p>{0.008 * Text.split(\" \").filter((element)=>{return element.length!==0 }).length} Minutes read</p>\r\n        <h2>Preview</h2>\r\n        <p>{Text.length>0?Text:\"Nothing to Preview\"}</p>\r\n        </div>\r\n        \r\n\r\n        </>\r\n        \r\n    )\r\n}\r\n","import React from 'react'\r\n\r\nfunction Alert(props) {\r\n    const capitalize = (word)=>{\r\n        const lower =  word.toLowerCase();\r\n        return lower.charAt(0).toUpperCase() + lower.slice(1);\r\n    }\r\n    return (\r\n        <div style={{height : '50px'}}>\r\n            {props.alert && <div className={`alert alert-${props.alert.type} alert-dismissible fade show`} role=\"alert\">\r\n                <strong>{capitalize(props.alert.type)}</strong>: {props.alert.msg}\r\n            </div>}\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Alert\r\n","import \"./App.css\";\nimport Navbar from \"./components/Navbar\";\nimport TextForm from \"./components/TextForm\";\nimport React, { useState } from \"react\";\nimport Alert from \"./components/Alert\";\n//import About from \"./components/About\";\n// import {\n//   BrowserRouter as Router,\n//   Switch,\n//   Route,\n//   Link,\n//   useRouteMatch,\n//   useParams\n// } from \"react-router-dom\";\n\n\n\nfunction App() {\n  const [mode, setmode] = useState('light');\n  const [alert, setAlert] = useState(null);\n\n  const showAlert = (message, type)=>{\n    setAlert({\n    msg: message,\n    type: type\n    })   \n\n    setTimeout(() => {\n      setAlert(null);\n      \n    }, 2000);\n  };\n\n  const toggleMode = ()=>{\n    if (mode === 'light') {\n      setmode('dark');\n      document.body.style.backgroundColor='#21054d';\n      showAlert(\"Dark mode has been Enabled\",\"success\");\n    } else {\n      setmode('light');\n      document.body.style.backgroundColor='white';\n      showAlert(\"Light mode has been Enabled\",\"success\");\n    }\n  };\n\n  return (\n    <>\n     {/*<Router>*/}\n      <Navbar title=\"TEXTUTILES\" mode={mode} toggleMode={toggleMode} />\n      <Alert alert={alert}/>\n      <div className=\"container my-3\">\n        {/* <Switch>\n          <Route exact  path=\"/about\">\n            <About />\n          </Route>\n        <Route exact path=\"/\"> */}\n          <TextForm heading=\"Enter the text to analyze below\"   mode={mode} />\n         {/*</Route*/}\n      {/*</Switch>*/}\n      </div>\n      {/*</Router>*/}\n    </>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}